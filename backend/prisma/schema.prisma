// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Gym {
  id           String     @id @default(cuid())
  name         String
  location     String?
  qrIdentifier String     @unique // Unique string embedded in the Gym's QR code
  passes       PassType[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model PassType {
  id              String          @id @default(cuid())
  gymId           String
  gym             Gym             @relation(fields: [gymId], references: [id])
  name            String // e.g., "1 Day Pass", "1 Month Pass"
  duration        Int // Duration in days (e.g., 1, 7, 30, 90, 180, 365)
  price           Decimal         @db.Decimal(10, 2) // Price
  currency        String          @default("INR")
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  purchasedPasses PurchasedPass[]
}

model User {
  id              String          @id
  email           String?         @unique
  name            String?
  phoneNumber     String?
  purchasedPasses PurchasedPass[]
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

model PurchasedPass {
  id              String   @id @default(cuid())
  passTypeId      String
  passType        PassType @relation(fields: [passTypeId], references: [id])
  userId          String
  user            User     @relation(fields: [userId], references: [id])
  deviceId        String? // Add device/session identifier
  purchaseDate    DateTime @default(now())
  expiryDate      DateTime
  paymentIntentId String?  @unique
  paymentStatus   String   @default("pending")
  qrCodeValue     String   @unique
  isActive        Boolean  @default(true)
  amount          Decimal? @db.Decimal(10, 2) // Amount paid for the pass
  currency        String   @default("INR") // Currency of the payment
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
